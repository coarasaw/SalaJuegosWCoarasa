<<<<<<< HEAD
{"version":3,"sources":["./src/app/modulos/auth/login-verificar-correo/login-verificar-correo.component.ts","./src/app/modulos/auth/login-verificar-correo/login-verificar-correo.component.html","./src/app/modulos/auth/auth.module.ts","./src/app/modulos/auth/auth-routing.module.ts","./src/app/modulos/auth/login/login.component.ts","./src/app/modulos/auth/login/login.component.html","./src/app/modulos/auth/login-registrar/login-registrar.component.ts","./src/app/modulos/auth/login-registrar/login-registrar.component.html","./src/app/servicios/error.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAOO,MAAM,6BAA6B;IAExC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0GALU,6BAA6B;6GAA7B,6BAA6B;QCP1C,oEAAG;QAAA,wFAA6B;QAAA,4DAAI;;;;;;;;;;;;;;ACCpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACmB;AAER;AACD;AACG;AAC0B;AACoB;;AAiBnG,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FARZ;YACP,4DAAY;YACZ,sEAAiB;YACjB,yEAAY;YACZ,0DAAW;YACX,kEAAmB;SACpB;mIAEU,UAAU,mBAZnB,qEAAc;QACd,kGAAuB;QACvB,sHAA6B,aAG7B,4DAAY;QACZ,sEAAiB;QACjB,yEAAY;QACZ,0DAAW;QACX,kEAAmB;;;;;;;;;;;;;ACrBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACvD,qBAAqB;AACoC;AAC6B;AACoB;;;AAE1G,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kGAAuB,EAAC;IACxD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,sHAA6B,EAAE;IACpE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAC,SAAS,EAAE,MAAM,EAAE;CACpD,CAAC;AAMK,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;oGAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;;;;;;;;;;;;;ACdxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;;ICDhE,yEAAgE;IAC9D,yEAA2B;IAC7B,4DAAM;;;IAgBI,2EACwG;IACtG,sEAAW;IAAA,yEAAQ;IAAA,uEAAY;IAAA,4DAAS;IAC1C,4DAAO;;;IACP,2EAA+H;IAC7H,mEAAQ;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IACnC,4DAAO;;;IAKP,2EACsG;IACtG,+EAAe;IAAA,yEAAQ;IAAA,uEAAY;IAAA,4DAAS;IAC5C,4DAAO;;;;IA7BjB,yEAAkC;IAChC,yEAAkB;IAChB,yEAAuB;IACrB,yEAA6B;IAC3B,sEAAK;IACH,wEAAmC;IAAA,gEAAK;IAAA,4DAAK;IAC/C,4DAAM;IACN,sEAAK;IACH,oEAAoF;IACtF,4DAAM;IACR,4DAAM;IACN,2EAA4D;IAA9B,2TAA6B;IACzD,2EAAkB;IAChB,wEAAqI;IACrI,iEAAI;IACJ,qHAGO;IACP,qHAEO;IACT,4DAAM;IACN,2EAAkB;IAChB,wEAA4I;IAC5I,iEAAI;IACJ,qHAGO;IACT,4DAAM;IACN,uEAAK;IACH,8EAAoF;IAAA,mEAAO;IAAA,4DAAS;IACpG,8EAAyF;IAAnE,yTAAyB;IAA0C,sEAAU;IAAA,4DAAS;IAC9G,4DAAM;IACN,iEAAI;IACJ,2EAA4B;IAC1B,8EAA4E;IAA7B,2TAA2B;IAAE,8EAAkB;IAAA,4DAAS;IACzG,4DAAM;IACR,4DAAO;IACP,iEAAI;IACJ,2EAAyB;IACvB,yEAAgC;IAAA,uEAAW;IAAA,4DAAI;IAC/C,iEAAI;IAEN,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;;;IArCM,0DAAuB;IAAvB,uFAAuB;IAEoF,0DAAuB;IAAvB,uFAAuB;IAGnI,0DAAqG;IAArG,2PAAqG;IAG3E,0DAAkG;IAAlG,wPAAkG;IAKR,0DAAsB;IAAtB,sFAAsB;IAG1I,0DAAmG;IAAnG,yPAAmG;IAK9E,0DAA8B;IAA9B,8FAA8B;;ADrB3D,MAAM,cAAc;IAOzB,YAAoB,KAAY,EACZ,EAAe,EACf,MAAwB,EACxB,aAA2B,EAC3B,MAAqB;QAJrB,UAAK,GAAL,KAAK,CAAO;QACZ,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAkB;QACxB,kBAAa,GAAb,aAAa,CAAc;QAC3B,WAAM,GAAN,MAAM,CAAe;QARzC,YAAO,GAAG,KAAK,CAAC;QAWd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,aAAa,EAAE,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC1D,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;QACb,6EAA6E;QAC7E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC/D,CAAC;IAED,cAAc;;QACV,6BAA6B;QAC7B,MAAM,OAAO,SAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,KAAK,CAAC;QAC3D,MAAM,QAAQ,SAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,0CAAE,KAAK,CAAC;QAE3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAC5E,yBAAyB;YACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACnC,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,OAAO,CAAC;YAC/D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,MAAM,OAAO,GAAS;YACpB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB;QACD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACxD,CAAC;;4EA1DU,cAAc;8FAAd,cAAc;QCf3B,yEAA4B;QACxB,0GAEM;QACN,2GAgDM;QACR,4DAAM;QACR,0EAA6B;;QArDnB,0DAAa;QAAb,6EAAa;QAGb,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;ACHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;;ICAhE,yEAAgE;IAC5D,yEAA2B;IAC/B,4DAAM;;;IASkB,2EACoG;IAChG,sEAAU;IAAA,yEAAQ;IAAA,uEAAY;IAAA,4DAAS;IAC3C,4DAAO;;;IACP,2EACiG;IAC7F,mEAAO;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IACpC,4DAAO;;;IAIP,2EACsG;IAClG,+EAAc;IAAA,yEAAQ;IAAA,uEAAY;IAAA,4DAAS;IAC/C,4DAAO;;;IACP,2EACuG;IACnG,2FAA0B;IAAA,yEAAQ;IAAA,kFAAuB;IAAA,4DAAS;IACtE,4DAAO;;;IAIP,2EAAqE;IACjE,4EAAW;IAAA,yEAAQ;IAAA,oEAAS;IAAA,4DAAS;IACzC,4DAAO;;;;IAhC/B,yEAAkC;IAE1B,yEAAkB;IACd,yEAAuB;IACnB,wEAAqC;IAAA,2EAAgB;IAAA,4DAAK;IAC1D,0EAA0D;IAAxB,8TAAuB;IACrD,yEAAkB;IACd,uEAAuG;IACvG,4HAGO;IACP,4HAGO;IACX,4DAAM;IACN,0EAAkB;IACd,wEAAgH;IAChH,8HAGO;IACP,8HAGO;IACX,4DAAM;IACN,0EAAkB;IACd,wEAA+H;IAC/H,8HAEO;IACX,4DAAM;IACN,8EAAkE;IAAA,kEAAM;IAAA,4DAAS;IACjF,8EAAkG;IAAA,mEAAO;IAAA,4DAAS;IACtH,4DAAO;IACX,4DAAM;IACV,4DAAM;IAEd,4DAAM;;;;;;;IAnCgB,0DAA2B;IAA3B,2FAA2B;IAIxB,0DAAiG;IAAjG,uPAAiG;IAIjG,0DAA8F;IAA9F,oPAA8F;IAO9F,0DAAmG;IAAnG,yPAAmG;IAInG,0DAAoG;IAApG,0PAAoG;IAM1E,0DAAuC;IAAvC,0GAAuC;IAKhD,0DAAkC;IAAlC,kGAAkC;;AD3BzE,MAAM,uBAAuB;IAIlC,YAAoB,EAAe,EACf,MAAwB,EACxB,MAAc,EACd,MAAqB,EACrB,aAA2B;QAJ3B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAkB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,kBAAa,GAAb,aAAa,CAAc;QAN/C,YAAO,GAAG,KAAK,CAAC;QAQF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACrD,QAAQ,EAAE,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,eAAe,EAAE,CAAC,EAAE,CAAC;SACtB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,EAAC,CAAC;IAClD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;;QACN,MAAM,OAAO,SAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,0CAAE,KAAK,CAAC;QACzD,MAAM,QAAQ,SAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,KAAK,CAAC;QAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,8BAA8B,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACtE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sCAAsC,EAAE,qBAAqB,CAAC,CAAC;YACnF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,OAAO,CAAC,CAAC;QAClE,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAgB;;QAC5B,MAAM,IAAI,SAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,0CAAE,KAAK,CAAC;QAC5C,MAAM,iBAAiB,SAAG,KAAK,CAAC,QAAQ,CAAC,eAAe,0CAAE,KAAK,CAAC;QAChE,OAAO,IAAI,KAAK,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;IAC9D,CAAC;;8FAtCU,uBAAuB;uGAAvB,uBAAuB;QCZpC,yEAA4B;QACxB,mHAEM;QACN,oHAwCM;QACV,4DAAM;QACN,0EAA6B;;QA7CnB,0DAAa;QAAb,6EAAa;QAGb,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;;;;;ACCjB,MAAM,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,KAAK,CAAC,IAAY;QAChB,QAAO,IAAI,EAAC;YACV,sBAAsB;YACtB,KAAK,2BAA2B;gBAC9B,OAAO,8BAA8B;YAEvC,kBAAkB;YAClB,KAAK,oBAAoB;gBACvB,OAAO,uBAAuB;YAEhC,6BAA6B;YAC7B,KAAK,oBAAoB;gBACvB,OAAO,4BAA4B;YAErC,KAAK,qBAAqB;gBACxB,OAAO,kBAAkB;YAE3B,KAAK,qBAAqB;gBACxB,OAAO,2BAA2B;YAEpC;gBACE,OAAO,mBAAmB,CAAC;SAC9B;IACH,CAAC;;wEA3BU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM","file":"modulos-auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-verificar-correo',\n  templateUrl: './login-verificar-correo.component.html',\n  styleUrls: ['./login-verificar-correo.component.css']\n})\nexport class LoginVerificarCorreoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login-verificar-correo works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LoginRegistrarComponent } from './login-registrar/login-registrar.component';\nimport { LoginVerificarCorreoComponent } from './login-verificar-correo/login-verificar-correo.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    LoginRegistrarComponent,\n    LoginVerificarCorreoComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n//Componentes Propios\nimport { LoginComponent } from './login/login.component';\nimport { LoginRegistrarComponent } from './login-registrar/login-registrar.component';\nimport { LoginVerificarCorreoComponent } from './login-verificar-correo/login-verificar-correo.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'registrar', component: LoginRegistrarComponent},\n  { path: 'recuperarclave', component: LoginVerificarCorreoComponent },\n  { path: '', redirectTo: 'login',pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ErrorService } from 'src/app/servicios/error.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/user';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loading = false;\n  muestroCorreo: string;\n  muestroClave: string;\n \n  constructor(private rutas:Router,\n              private fb: FormBuilder,\n              private afAuth : AngularFireAuth,\n              private _errorService: ErrorService,\n              private toastr: ToastrService  \n  ){\n    \n    this.loginForm = this.fb.group({\n      usuarioCorreo: ['',[Validators.required,Validators.email]],\n      usuarioClave: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  automaticoLogin(){\n    //this.VendedorForm.controls['nombres'].setValue(response.body.data.nombres);\n    this.loginForm.controls['usuarioCorreo'].setValue('danny@gmail.com');\n    this.loginForm.controls['usuarioClave'].setValue('pepe123');\n  }\n\n  adinistradorLogin(){\n    this.loginForm.controls['usuarioCorreo'].setValue('admin@gmail.com');\n    this.loginForm.controls['usuarioClave'].setValue('admin123');\n  }\n\n  loginSiguiente(){\n      //console.log(this.loginForm)\n      const usuario = this.loginForm.get('usuarioCorreo')?.value;\n      const password = this.loginForm.get('usuarioClave')?.value;\n\n      this.loading = true;\n      this.afAuth.signInWithEmailAndPassword(usuario,password).then((respuesta) => {\n      //console.log(respuesta);\n      this.loading = false;\n      this.setLocalStorage(respuesta.user);\n      this.rutas.navigate(['/inicio']);\n    }, error => {\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code),'Error')\n      this.loginForm.reset();\n    }) \n  }\n\n  setLocalStorage(user: any){\n    const usuario: User = {\n      uid: user.uid,\n      email: user.email\n    }\n    localStorage.setItem('user', JSON.stringify(usuario)); \n  }\n\n}\n","<div class=\"conteiner mt-3\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n      <app-spinner></app-spinner>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"contenedorLogin\">\n            <div>\n              <h2 class=\"text-left tituloPropio\">LOGIN</h2>\n            </div>\n            <div>\n              <img src=\"../../../../assets/login/login3.svg\" alt=\"Login\" width=\"100\" height=\"100\">\n            </div>\n          </div>\n          <form [formGroup]='loginForm' (ngSubmit)=\"loginSiguiente()\">\n            <div class=\"mb-3\">\n              <input type=\"text\" formControlName=\"usuarioCorreo\" class=\"from-control form-control-lg\" placeholder=\"Correo\" [value]=\"muestroCorreo\">\n              <br>\n              <span class=\"text-danger\" \n              *ngIf=\"loginForm.get('usuarioCorreo')?.hasError('required') && loginForm.get('usuarioCorreo')?.touched\">\n                El correo  <strong>es requerido</strong>\n              </span>\n              <span class=\"text-danger\" *ngIf=\"loginForm.get('usuarioCorreo')?.hasError('email') && loginForm.get('usuarioCorreo')?.touched\">\n                Correo  <strong>invalido</strong>\n              </span>\n            </div>\n            <div class=\"mb-3\">\n              <input type=\"password\" formControlName=\"usuarioClave\"  class=\"from-control form-control-lg\" placeholder=\"Contraseña\" [value]=\"muestroClave\">\n              <br>\n              <span class=\"text-danger\" \n              *ngIf=\"loginForm.get('usuarioClave')?.hasError('required') && loginForm.get('usuarioClave')?.touched\">\n              La contraseña  <strong>es requerido</strong>\n              </span> \n            </div>\n            <div>\n              <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary btn-lg\">Aceptar</button>\n              <button type=\"button\" (click)=automaticoLogin() class=\"btn btn-primary btn-lg float-end\">Login (in)</button>\n            </div>\n            <br>  \n            <div class = \"text-center\" >\n              <button type=\"button\" class=\"btn btn-primary \" (click)=adinistradorLogin() >Administrador (in)</button>\n            </div>\n          </form>\n          <br>\n          <div class=\"text-center\">\n            <a routerLink=\"/auth/registrar\">Registrarse</a>\n            <br>\n           <!-- <a routerLink=\"/recuperar-clave\">Recuperar Contraseña</a> -->\n          </div>\n        </div>\n      </div>\n    </div> \n  </div> \n<app-pie-gral></app-pie-gral>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ErrorService } from 'src/app/servicios/error.service';\n\n@Component({\n  selector: 'app-login-registrar',\n  templateUrl: './login-registrar.component.html',\n  styleUrls: ['./login-registrar.component.css']\n})\nexport class LoginRegistrarComponent implements OnInit {\n  registrarForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder,\n              private afAuth : AngularFireAuth,\n              private router: Router,\n              private toastr: ToastrService,\n              private _errorService: ErrorService) { \n\n                this.registrarForm = this.fb.group({\n                  usuario: ['',[Validators.required, Validators.email]],\n                  password: ['',[Validators.required, Validators.minLength(6)]],\n                  repetirPassword: ['']\n                }, { validator: this.ckeckPassword})\n  }\n\n  ngOnInit(): void {\n  }\n\n  registar(){\n    const usuario = this.registrarForm.get('usuario')?.value;\n    const password = this.registrarForm.get('password')?.value;\n    this.loading = true;\n    this.afAuth.createUserWithEmailAndPassword(usuario,password).then(rta => {\n      this.toastr.success('El usuario fue registrado con exito!', 'Usuario registrado!');\n      this.router.navigate(['/home'])\n    }).catch(error => {\n      this.registrarForm.reset();\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code),'Error');\n    })\n  }\n\n  ckeckPassword(group: FormGroup): any {\n    const pass = group.controls.password?.value;\n    const confirmarPassword = group.controls.repetirPassword?.value;\n    return pass === confirmarPassword ? null : { notSame: true }\n  }\n}\n","<div class=\"conteiner mt-3\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n        <app-spinner></app-spinner>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n        <!-- <div class=\"col-lg-10 offset-lg-3\"> -->\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h2 class=\"text-center\" tituloPropio>Registar Usuario</h2>\n                    <form [formGroup]=\"registrarForm\" (ngSubmit)=\"registar()\">\n                        <div class=\"mb-3\">\n                            <input type=\"text\" formControlName=\"usuario\" class=\"form-control form-control-lg\" placeholder=\"Correo\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('usuario')?.hasError('required') && registrarForm.get('usuario')?.touched\">\n                                El Correo <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('usuario')?.hasError('email') && registrarForm.get('usuario')?.touched\">\n                                Correo <strong>invalido</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Contraseña\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('password')?.hasError('required') && registrarForm.get('password')?.touched\">\n                                La contraseña <strong>es requerida</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('password')?.hasError('minlength') && registrarForm.get('password')?.touched\">\n                                La contraseña como minimo <strong>debe tener 6 caracteres</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"repetirPassword\" class=\"form-control form-control-lg\" placeholder=\"Repetir Contraseña\">\n                            <span class=\"text-danger\" *ngIf=\"registrarForm.hasError('notSame')\" >\n                                Contraseña <strong>distintas</strong>\n                            </span>\n                        </div>\n                        <button routerLink=\"/auth/login\" class=\"btn btn-secondary btn-lg\">Volver</button>\n                        <button type=\"submit\" [disabled]=\"registrarForm.invalid\" class=\"btn btn-primary btn-lg float-end\">Aceptar</button>\n                    </form>\n                </div>\n            </div>  \n        <!--</div>-->\n    </div>\n</div>\n<app-pie-gral></app-pie-gral>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor() { }\n\n  error(code: string):string{\n    switch(code){\n      // Email ya registrado\n      case 'auth/email-already-in-use':\n        return 'El Correo ya esta registrado'\n\n      // Correo invalido\n      case 'auth/invalid-email':\n        return 'El Correo es invalido'\n\n      // La Contraseña es muy debil\n      case 'auth/weak-password':\n        return 'La Contraseña es muy debil'\n\n      case 'auth/user-not-found':\n        return 'Usuario invalido'  \n\n      case 'auth/wrong-password':\n        return 'La contraseña es invalida'  \n\n      default:\n        return 'Error desconocido';\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}
=======
{"version":3,"sources":["./src/app/modulos/auth/login-verificar-correo/login-verificar-correo.component.ts","./src/app/modulos/auth/login-verificar-correo/login-verificar-correo.component.html","./src/app/modulos/auth/auth.module.ts","./src/app/modulos/auth/auth-routing.module.ts","./src/app/modulos/auth/login/login.component.ts","./src/app/modulos/auth/login/login.component.html","./src/app/modulos/auth/login-registrar/login-registrar.component.ts","./src/app/modulos/auth/login-registrar/login-registrar.component.html","./src/app/servicios/error.service.ts"],"names":[],"mappings":"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","file":"modulos-auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-verificar-correo',\n  templateUrl: './login-verificar-correo.component.html',\n  styleUrls: ['./login-verificar-correo.component.css']\n})\nexport class LoginVerificarCorreoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login-verificar-correo works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LoginRegistrarComponent } from './login-registrar/login-registrar.component';\nimport { LoginVerificarCorreoComponent } from './login-verificar-correo/login-verificar-correo.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    LoginRegistrarComponent,\n    LoginVerificarCorreoComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n//Componentes Propios\nimport { LoginComponent } from './login/login.component';\nimport { LoginRegistrarComponent } from './login-registrar/login-registrar.component';\nimport { LoginVerificarCorreoComponent } from './login-verificar-correo/login-verificar-correo.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'registrar', component: LoginRegistrarComponent},\n  { path: 'recuperarclave', component: LoginVerificarCorreoComponent },\n  { path: '', redirectTo: 'login',pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ErrorService } from 'src/app/servicios/error.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/user';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loading = false;\n  muestroCorreo: string;\n  muestroClave: string;\n \n  constructor(private rutas:Router,\n              private fb: FormBuilder,\n              private afAuth : AngularFireAuth,\n              private _errorService: ErrorService,\n              private toastr: ToastrService  \n  ){\n    \n    this.loginForm = this.fb.group({\n      usuarioCorreo: ['',[Validators.required,Validators.email]],\n      usuarioClave: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  automaticoLogin(){\n    //this.VendedorForm.controls['nombres'].setValue(response.body.data.nombres);\n    this.loginForm.controls['usuarioCorreo'].setValue('danny@gmail.com');\n    this.loginForm.controls['usuarioClave'].setValue('pepe123');\n  }\n\n  adinistradorLogin(){\n    this.loginForm.controls['usuarioCorreo'].setValue('admin@gmail.com');\n    this.loginForm.controls['usuarioClave'].setValue('admin123');\n  }\n\n  loginSiguiente(){\n      //console.log(this.loginForm)\n      const usuario = this.loginForm.get('usuarioCorreo')?.value;\n      const password = this.loginForm.get('usuarioClave')?.value;\n\n      this.loading = true;\n      this.afAuth.signInWithEmailAndPassword(usuario,password).then((respuesta) => {\n      //console.log(respuesta);\n      this.loading = false;\n      this.setLocalStorage(respuesta.user);\n      this.rutas.navigate(['/inicio']);\n    }, error => {\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code),'Error')\n      this.loginForm.reset();\n    }) \n  }\n\n  setLocalStorage(user: any){\n    const usuario: User = {\n      uid: user.uid,\n      email: user.email\n    }\n    localStorage.setItem('user', JSON.stringify(usuario)); \n  }\n\n}\n","<div class=\"conteiner mt-3\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n      <app-spinner></app-spinner>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"contenedorLogin\">\n            <div>\n              <h2 class=\"text-left tituloPropio\">LOGIN</h2>\n            </div>\n            <div>\n              <img src=\"../../../../assets/login/login3.svg\" alt=\"Login\" width=\"100\" height=\"100\">\n            </div>\n          </div>\n          <form [formGroup]='loginForm' (ngSubmit)=\"loginSiguiente()\">\n            <div class=\"mb-3\">\n              <input type=\"text\" formControlName=\"usuarioCorreo\" class=\"from-control form-control-lg\" placeholder=\"Correo\" [value]=\"muestroCorreo\">\n              <br>\n              <span class=\"text-danger\" \n              *ngIf=\"loginForm.get('usuarioCorreo')?.hasError('required') && loginForm.get('usuarioCorreo')?.touched\">\n                El correo  <strong>es requerido</strong>\n              </span>\n              <span class=\"text-danger\" *ngIf=\"loginForm.get('usuarioCorreo')?.hasError('email') && loginForm.get('usuarioCorreo')?.touched\">\n                Correo  <strong>invalido</strong>\n              </span>\n            </div>\n            <div class=\"mb-3\">\n              <input type=\"password\" formControlName=\"usuarioClave\"  class=\"from-control form-control-lg\" placeholder=\"Contraseña\" [value]=\"muestroClave\">\n              <br>\n              <span class=\"text-danger\" \n              *ngIf=\"loginForm.get('usuarioClave')?.hasError('required') && loginForm.get('usuarioClave')?.touched\">\n              La contraseña  <strong>es requerido</strong>\n              </span> \n            </div>\n            <div>\n              <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary btn-lg\">Aceptar</button>\n              <button type=\"button\" (click)=automaticoLogin() class=\"btn btn-primary btn-lg float-end\">Login (in)</button>\n            </div>\n            <br>  \n            <!-- <div class = \"text-center\" >\n              <button type=\"button\" class=\"btn btn-primary \" (click)=adinistradorLogin() >Administrador (in)</button>\n            </div> -->\n          </form>\n          <br>\n          <div class=\"text-center\">\n            <a routerLink=\"/auth/registrar\">Registrarse</a>\n            <br>\n           <!-- <a routerLink=\"/recuperar-clave\">Recuperar Contraseña</a> -->\n          </div>\n        </div>\n      </div>\n    </div> \n  </div> \n<app-pie-gral></app-pie-gral>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ErrorService } from 'src/app/servicios/error.service';\n\n@Component({\n  selector: 'app-login-registrar',\n  templateUrl: './login-registrar.component.html',\n  styleUrls: ['./login-registrar.component.css']\n})\nexport class LoginRegistrarComponent implements OnInit {\n  registrarForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder,\n              private afAuth : AngularFireAuth,\n              private router: Router,\n              private toastr: ToastrService,\n              private _errorService: ErrorService) { \n\n                this.registrarForm = this.fb.group({\n                  usuario: ['',[Validators.required, Validators.email]],\n                  password: ['',[Validators.required, Validators.minLength(6)]],\n                  repetirPassword: ['']\n                }, { validator: this.ckeckPassword})\n  }\n\n  ngOnInit(): void {\n  }\n\n  registar(){\n    const usuario = this.registrarForm.get('usuario')?.value;\n    const password = this.registrarForm.get('password')?.value;\n    this.loading = true;\n    this.afAuth.createUserWithEmailAndPassword(usuario,password).then(rta => {\n      this.toastr.success('El usuario fue registrado con exito!', 'Usuario registrado!');\n      this.router.navigate(['/home'])\n    }).catch(error => {\n      this.registrarForm.reset();\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code),'Error');\n    })\n  }\n\n  ckeckPassword(group: FormGroup): any {\n    const pass = group.controls.password?.value;\n    const confirmarPassword = group.controls.repetirPassword?.value;\n    return pass === confirmarPassword ? null : { notSame: true }\n  }\n}\n","<div class=\"conteiner mt-3\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n        <app-spinner></app-spinner>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n        <!-- <div class=\"col-lg-10 offset-lg-3\"> -->\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h2 class=\"text-center\" tituloPropio>Registar Usuario</h2>\n                    <form [formGroup]=\"registrarForm\" (ngSubmit)=\"registar()\">\n                        <div class=\"mb-3\">\n                            <input type=\"text\" formControlName=\"usuario\" class=\"form-control form-control-lg\" placeholder=\"Correo\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('usuario')?.hasError('required') && registrarForm.get('usuario')?.touched\">\n                                El Correo <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('usuario')?.hasError('email') && registrarForm.get('usuario')?.touched\">\n                                Correo <strong>invalido</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Contraseña\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('password')?.hasError('required') && registrarForm.get('password')?.touched\">\n                                La contraseña <strong>es requerida</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('password')?.hasError('minlength') && registrarForm.get('password')?.touched\">\n                                La contraseña como minimo <strong>debe tener 6 caracteres</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"repetirPassword\" class=\"form-control form-control-lg\" placeholder=\"Repetir Contraseña\">\n                            <span class=\"text-danger\" *ngIf=\"registrarForm.hasError('notSame')\" >\n                                Contraseña <strong>distintas</strong>\n                            </span>\n                        </div>\n                        <button routerLink=\"/auth/login\" class=\"btn btn-secondary btn-lg\">Volver</button>\n                        <button type=\"submit\" [disabled]=\"registrarForm.invalid\" class=\"btn btn-primary btn-lg float-end\">Aceptar</button>\n                    </form>\n                </div>\n            </div>  \n        <!--</div>-->\n    </div>\n</div>\n<app-pie-gral></app-pie-gral>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor() { }\n\n  error(code: string):string{\n    switch(code){\n      // Email ya registrado\n      case 'auth/email-already-in-use':\n        return 'El Correo ya esta registrado'\n\n      // Correo invalido\n      case 'auth/invalid-email':\n        return 'El Correo es invalido'\n\n      // La Contraseña es muy debil\n      case 'auth/weak-password':\n        return 'La Contraseña es muy debil'\n\n      case 'auth/user-not-found':\n        return 'Usuario invalido'  \n\n      case 'auth/wrong-password':\n        return 'La contraseña es invalida'  \n\n      default:\n        return 'Error desconocido';\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}
>>>>>>> 77b95967d95da0304473d3bb238fc5f2053eb0be
